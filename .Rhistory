a <- (3, 12, 15, 20, 30)
3+5
### Base Mathematical Process ###
## Addition makes "x + y" ##
3+5
##If I want to see in console result of that procces, I will touch  ctrl + enter ##
## Subtriction makes "x - y" ##
5-2
## Multiplication makes "x * y" ##
10*8
## Division makes "x/y" ##
8/5
## Exponentiate makes "x**y" or "x^y"
10**2
5^5
## Unremainder division makes "x %% y" ##
10 %% 4
## Unremainder division makes "x %% y" ##
10 %/% 4
## Unremainder division makes "x %% y" ##
10 %/% 3
## Remainder fins "x %% y" ##
10 %% 3
print ("hello world")
print(5)
x <- read.csv("C:\\Users\\Yusuf\\Desktop\\The_Base_Of-R\\Examples\\Examples#1_ın_R.csv")
class(x)
x_list <- as.list(x)
x_matrix <- as.matrix(x)
a <- (1, 2, 3)
b <- ("a", "b", "c")
new_data <- data.frame(a, b)
a <- (1, 2, 3)
a <- c(1, 2, 3)
b <- c("lorem", "ipsum", "dolor")
new_data <- data.frame(a, b)
new_matrix <- as.matrix(new_data)
View(new_data)
View(new_data)
View(new_matrix)
View(new_matrix)
a <- read_xlsx ("C:\\Users\\Yusuf\\Desktop\\Yazılım\\Devam Edenler\\The_Base_Of-R\\Examples\\Example#4_in_R.xlsx")
install.packages("readxl")
library(readxl)
Example_Working <- read_xlsx ("C:\\Users\\Yusuf\\Desktop\\Yazılım\\Devam Edenler\\The_Base_Of-R\\Examples\\Example#4_in_R.xlsx")
View(Example_Working)
View(Example_Working)
ID_Knowledge <- Example_Working$Student_ID
ID_Knowledge2 <- Example_Working[1]
View(ID_Knowledge2)
View(ID_Knowledge2)
A_Table <- Example_Working[1:3, 1:3]
View(A_Table)
View(A_Table)
A_Table <- Example_Working[1:3, 1:5]
View(A_Table)
A_Table2 <- Example_Working[c(1, 2), 1:4]
View(A_Table2)
View(A_Table2)
A_Table3 <- Example_Working[c(1, 2, 3), c(4, 5)]
Second_Student <- Example_Working@193
names(Example_Working)[2] <- "Gender"
colnames(Example_Working) [1] <- "ID"
colnames(Example_Working) <- c("Number", "Sex")
colnames(Example_Working) <- c("Number", "Sex", "Age")
data <- read.csv("Chocolate Sales.csv")
data <- read.csv("C:\\Users\\Yusuf\\Desktop\\chocalateSalesDatasExcel\\Chocolate Sales.csv")
View(data)
View(data)
data <- read.csv("Chocolate Sales.csv", sep = " ; ")
data <- read.csv("Chocolate Sales.csv", sep = " ; ")
View(data)
View(data)
setwd("C:\\Users\\Yusuf\\Desktop\\chocalateSalesDatasExcel")
data <- read.csv("Chocolate Sales.csv", sep = " ; ")
data <- read.csv("Chocolate Sales.csv")
View(data)
View(data)
data <- read.csv("Chocolate Sales.csv", set = " ; ")
data <- read.csv("Chocolate Sales.csv", sep = " ; ")
data <- read.csv("Chocolate Sales.csv", sep = ";")
table(data$Sales.Person)
unique(data$Sales.Person)
unique(data$Product)
earningData <- data[c(1, 5, 6)]
View(earningData)
View(earningData)
## If I need to how many earned the company, I need to total income.
## I will make Amount * Boxes.Shipped for find to total income per every persons.
## Firstly I need change int type the two columns. But firstly, I need to make a control.
str(earningData)
earningData$Amount <- gsub("\\$", "", earningData$Amount)
earningData$Amount <- as.numeric(gsub("\\$", "", earningData$Amount))
earningData$Amount <- gsub("\\$", "", earningData$Amount)
earningData$Amount <- gsub("\\,", ".", earningData$Amount)
earningData$Amount <- gsub(",", ".", earningData$Amount)
earningData <- data[c(1, 5, 6)]
earningData$Amount <- gsub("\\$", "", earningData$Amount)
earningData$Amount <- gsub(",", ".", earningData$Amount)
earningData$Amount <- as.numeric(earningData$Amount)
str(earningData)
earningData$Amount <- earningData$Amount / 100
earningData$Amount <- earningData$Amount / 10
earningData$Amount <- earningData$Amount
earningData$Amount <- gsub("\\$", "", earningData$Amount) ## I deleted $ symboll
earningData$Amount <- gsub(",", ".", earningData$Amount) ## I deleted , symbol and that was a reaon for * 100
earningData$Amount <- as.numeric(earningData$Amount) ## I changed numeric
earningData$Amount <- earningData$Amount * 100
earningData$Amount <- earningData$Amount * 1000
earningData$Amount <- earningData$Amount / 10
earningData$Amount <- earningData$Amount / 10
earningData$Amount <- earningData$Amount / 10
earningData$Amount <- earningData$Amount * 10
earningData$totalIncome <- (earningData$Amount / 100) * earningData$Boxes.Shipped
earningData$totalIncome <- earningData$Amount * earningData$Boxes.Shipped
totalIncomData <- earningData[c(1, 4)]
View(totalIncomData)
View(totalIncomData)
librar(dplyr) ## I called library.
intall.packages("dplyr")
install.packages("dplyr")
library(dplyr)
colnames(earningData)
totalIncomData <- totalIncomData %>%
totalIncomData <- totalIncomData %>%
summarize
totalIncomData <- totalIncomData %>%
summarize(total = sum(totalIncome, na.rm = TRUE))
totalIncomData <- totalIncomData %>%
summarize(total = sum(totalIncomeData, na.rm = TRUE))
install.packages("dplyr")
library(dplyr) ## I made active dplyr library.
colnames(earningData)
totalIncomData <- totalIncomData %>%
summarize(total = sum(totalIncomeData, na.rm = TRUE))
library(dplyr) ## I made active dplyr library.
colnames(earningData)
totalIncomData <- totalIncomData %>%
summarize(total = sum(totalIncomeData, na.rm = TRUE))
totallncomData <- totallncomData %>%
summarize(total = sum(totallncomeData, na.rm = TRUE))
colnames(earningData)
totalIncome <- totalIncome %>%
summarize(totalIncome = sum(totalIncome, na.rm = TRUE))
library(dplyr) ## I made active dplyr library.
totalIncomData <- earningData[c(1, 4)]
colnames(earningData)
totalIncomeData <- totalIncomeData %>%
group_by(Sales.Person) %>%
summarize(totalIncome = sum(totalIncome, na.rm = TRUE))
totalIncomeData <- totalIncomeData %>%
group_by(Sales.Person) %>%
summarize(totalIncome = sum(totalIncome, na.rm = TRUE))
totalIncomeData <- totalIncomeData %>%
group_by(Sales.Person) %>%
summarize(totalIncome = sum(totalIncome, na.rm = TRUE))
totalIncomData <- earningData[c(1, 4)]
library(dplyr) ## I made active dplyr library.
colnames(earningData)
totalIncomeData <- totalIncomeData %>%
totalIncomeData <- totalIncomeData %>%
group_by(Sales.Person) %>%
totalIncomeData <- totalIncomeData %>%
group_by(Sales.Person) %>%
summarize(totalIncome = sum(totalIncome, na.rm = TRUE))
totalIncomeData <- totalIncomeData %>%
group_by(Sales.Person) %>%
summarize(total = sum(totalIncome, na.rm = TRUE))
totalIncomData <- earningData[c(1, 4)]
aggregate(totalIncome ~ Sales.Person, data = totalIncomData, sum)
totalPersonelIncomeData <- aggregate(totalIncome ~ Sales.Person, data = totalIncomData, sum)
View(totalPersonelIncomeData)
View(totalPersonelIncomeData)
View(totalIncomData)
totalPersonelIncomeData <- aggregate(totalIncome ~ Sales.Person, data = earningData, sum)
totalIncomeData <- aggregate(totalIncome ~ Sales.Person, data = earningData, sum)
View(totalIncomData)
View(totalIncomData)
View(totalIncomeData)
View(totalIncomeData)
## Install and call the libraries
install.packages("ggplot2")
library(ggplot2)
ggplot(totalIncomeData, aes(x=Sales.Person, y=totalIncome))+
geom_bar(stat = "identity", position = "dodge")
data <- read.csv("Chocolate Sales.csv", sep = ";")
table(data$Sales.Person)
unique(data$Sales.Person)
unique(data$Product)
earningData <- data[c(1, 5, 6)]
## If I need to how many earned the company, I need to total income.
## I will make Amount * Boxes.Shipped for find to total income per every persons.
## Firstly I need change int type the two columns. But firstly, I need to make a control.
str(earningData)
earningData$Amount <- gsub("\\$", "", earningData$Amount) ## I deleted $ symboll
earningData$Amount <- gsub(",", ".", earningData$Amount) ## I deleted , symbol and that was a reaon for * 100
earningData$Amount <- as.numeric(earningData$Amount) ## I changed numeric
str(earningData) ## I made control
earningData$totalIncome <- earningData$Amount * earningData$Boxes.Shipped
totalIncomeData <- aggregate(totalIncome ~ Sales.Person, data = earningData, sum)
## Install and call the libraries
install.packages("ggplot2")
View(data)
View(data)
View(earningData)
View(earningData)
View(totalIncomeData)
View(totalIncomeData)
ggplot(totalIncomeData, aes(x=Sales.Person, y=totalIncome))+
geom_bar(stat = "identity", position = "dodge")
library(ggplot2)
ggplot(totalIncomeData, aes(x=Sales.Person, y=totalIncome))+
geom_bar(stat = "identity", position = "dodge")
ggplot(totalIncomeData, aes(x=Sales.Person, y=totalIncome))+
geom_bar(stat = "identity", position = "dodge")+
theme(
axis.text.x = element_text(angle = 45)
)
mean_totalIncome <- mean(totalIncomeData$totalIncome, na.rm = TRUE)
sd_TotalIncome <- sd(totalIncomeData$totalIncome, na.rm = TRUE)
min_totalIncome <- min(totalIncomeData$totalIncome, na.rm = TRUE) ## min value
max_totalIncome <- max(totalIncomeData$totalIncome, na.rm = TRUE) ## max value
load("C:/Users/Yusuf/Desktop/chocalateSalesDatas/.RData")
